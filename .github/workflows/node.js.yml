# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main, sprint-dev ]
  pull_request:
    branches: [ main, sprint-dev ]
env:
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  REDIS_HOST: localhost
  REDIS_PORT: 6379
  
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
          
    steps:
    - name: Checkout the branch
      uses: actions/checkout@v2
      
    - name: Use Node.js
      uses: actions/setup-node@v2.4.0
      with:
        node-version: '16.x'
        
    - name: Create env File
      run: |
        touch .env
        echo MONGODB_URI=${{ secrets.MONGODB_URI }} >> .env
        
    - name: Install Dependencies
      run: npm ci
      
    - name: Build the Project
      run: npm run build --if-present
      
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta1
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: |
          omneex/dandle-backend

    - name: Build and push Backend Image
      uses: docker/build-push-action@v2.6.1
      with:
        context: .
        push: true
        tags: ${{ steps.meta1.outputs.tags }}
        labels: ${{ steps.meta1.outputs.labels }}
